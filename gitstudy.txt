new github

1. 在Windows上安装Git
	直接官网安装https://git-scm.com/downloads
	国内镜像地址是https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fgit

2. 安装完成后，设置用户名和邮件
	$ git config --global user.name "Your Name"
	$ git config --global user.email "email@example.com"

3. 在合适的目录下，建立git仓库，会建立.git的隐藏文件夹
$ git init

4. 工作区，暂存区（stage），仓库（master）

5. 有了github账号后，远程和本地是通过SSH协议加密传输的
	1. 所以先要创建SSH key， 在本地主用户目录中检查是否有id_sra和id_sra.pub这两个文件，如果有了就可以直接跳过，如果没有则创建
	$ssh-keygen -t rsa -C "he-128@163.com"

	2. 登录github 打开account setting 在ssh keys界面填写任意的title并将
	id_sra.pu中的内容拷贝到key中。后确定。
	
-----------------------------------------------------------
cmd:
新建文件夹learngit
$ mkdir learngit

切换目录
$ cd learngit

显示当前的目录
$ pwd

查看包括隐藏的文件夹目录
ls -ah

-----------------------------------------------------------
把文件添加到仓库
$ git add readme.txt

把文件提交到仓库
$ git commit -m "wrote a readme file"

查看git状态
$ git status
$ git status -s  （short）简单显示版本

查看保存的版本
$ git log
$ git log --pretty=oneline    简单显示版本

查看git log的记录，每一次git的记录
$git reflog

git保存的版本，HEAD^表示上一个版本，HEAD^^表示上上个版本，HEAD~100表示往上第100个版本
退回到上个版本
$git reset --hard HEAD^
也可以自由切换到任何版本，只需要记住git log中的版本号
$git reset --hard 364856        (git reset --hard commit-id)

修改了一个文件，还没有add提交暂存区，丢弃工作区的修改
$git checkout -- readme.txt

修改了一个文件，而且已经add了，还没有commit，此时吧暂存区中的内容撤销到工作区
$git reset HEAD readme.txt
然后在使用git checkout 指令将工作区的内容清空
如果已经commit了，那么就需要退回版本。
如果已经推送到远程库，那就哭了。

直接删除文件
$ rm test.txt
此时git知道文件发生了变化，git status也可以看出来
如果确实要从git库中删除此文件，则
$git rm test.txt
并且提交
$git commit -m "remove test.txt"
如果是误操作，需要恢复文件
$git checkout -- test.txt

-----------------------------------------------------------
关联一个远程库
git remote add origin git@server-name:path/repo-name.git

关联后,第一次推送master分支的所有内容
git push -u origin master

此后，每次本地提交后，推送最新修改
git push origin master

-----------------------------------------------------------
从远处克隆到本地
在命令行中切换到需要创建的目录下，cd...
$ git clone git@github.com:michaelliao/gitskills.git
然后切换到 目录 gitskills   cd gitskills
通过ls查看文件目录

-----------------------------------------------------------
分支管理
比如你在开发一个新的功能需要2周，1周后你完成了50%，现在提交项目没有全部
完成，而不提交又有丢失的风险，此时你就可以创建一个分支，正常提交不影响master。
创建分支dev 并切换到dev
$ git checkout -b dev
相当于两天指令
$ git branch dev
$ git checkout dev

察看分支情况
$ git branch



-------------------------------------------------------------------
-------------------day two-----------------------------------------
克隆仓库
git clone [url]   会在本地克隆一个仓库，名字跟网络一致，如果需要修改本地的仓库名称则
git clone [url] [name]

如果工作区内添加了新的文件，则新的文件是 untracked files中，未跟踪状态
使用add指令可以跟踪此文件，并添加到了暂存区，等待提交

git status [-s/--short]
简洁信息查询，??表示没跟踪的文件，A已暂存的新文件

忽略文件??
创建一个.gitignore文件，在其中列出待匹配的文件模式
$cat .gitignore
*.[oa]
*~

------------------------------------------------------------
git diff 查看工作区和已经暂存的内容的变化
git diff --staged/--cached 查看暂存区和提交的内容有什么变化
git mv file_a file_b  重命名文件


-------------------------------------------------------------------
-------------------three day---------------------------------------
检查远程仓库
git remote show origin

--注释标签
创建标签
git tag -a v1.0 -m "my version v1.0"

查看标签
git tag
git show v1.0

tips  在一行显示所有的提交版本
git log --pretty=oneline

分支管理
git branch testing 			创建
git checkout testing		切换到分支
git log --oneline --decorate --graph --all		可以显示版本情况-分支信息

将dev分支合并到master
git checkout master
git merge dev

删除dev分支
git branch -d dev














